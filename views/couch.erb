<a class="collapse right btn btn-white" href="webcal://<%= ENV['BASE_URL'].split('//')[1] %>feed/ical/user:<%= @user.id %>/key:<%= @user.servicekey %>" title="Add Showdates to your calendar">iCal Feed</a>

<h1>Couch</h1>

<p>This list shows the next episode for every show you follow and haven't watched yet.</p>

<% if @couch[:aired].count.zero? && @couch[:tobeaired].count.zero? %>
<p>Use the search feature in the top bar to find something to follow!</p>
<% end %>

<ul class="list-couch">

<% local_time = @user.to_local_time(Time.now.getutc) %>

<% if @couch[:aired].count > 0 %>
  <li>Watchlist</li>
  <ul id="section-watchlist">

    <% @couch[:aired].each do |show_id, ep| %>
      <li class="show-<%= ep[:episode].show.id %>" data-episode-id="<%= ep[:episode].id %>" data-timestamp="<%= ep[:episode].firstaired.to_time.to_i %>">
      	<p><span class="date date-past"><%= ep[:episode].firstaired_formatted(current_date: local_time.to_date) %></span>
      	<span class="episode-code tt" title="<% if ep[:queue] == 1 %>Final episode to catch up<% else %><%= ep[:queue] %> episodes to catch up<% end %>"><%= ep[:episode].episode_code %></span>
      	<a href="/show/<%= ep[:episode].show.id %>"><%= ep[:episode].show.title %></a> &ndash; <a href="/episode/<%= ep[:episode].id %>"><%= ep[:episode].title %></a></p>
      	<a href="/episode/watched/<%= ep[:episode].id %>" class="button-link link-episode episode-tick" data-episodeid="<%= ep[:episode].id %>"><img src="img/unwatched.png" /></a>

        <% if @user.providerurl %>
          <a href="<%= @user.providerurl_for_episode(ep[:episode]) %>" class="button-link link-episode button-binsearch" target="blank"><img src="img/link.png" /></a>
        <% end %>
      </li>
    <% end %>
  </ul>
<% end %>

<% if @couch[:tobeaired].count > 0 %>
  <li>To Be Aired</li>
  <ul id="section-tba">
    <% @couch[:tobeaired].each do |show_id, ep| %>
      <li class="show-<%= ep[:episode].show.id %>" data-episode-id="<%= ep[:episode].id %>" data-timestamp="<%= ep[:episode].firstaired.to_time.to_i %>">
      	<p><span class="date"><%= ep[:episode].firstaired_formatted(current_date: local_time.to_date) %></span>
      	<span class="episode-code"><%= ep[:episode].episode_code %></span>
      	<a href="/show/<%= ep[:episode].show.id %>"><%= ep[:episode].show.title %></a> &ndash; <a href="/episode/<%= ep[:episode].id %>"><%= ep[:episode].title %></a></p>
      </li>
    <% end %>
  </ul>
<% end %>
</ul>

<script id="episode-aired-template" type="text/x-showdates-row-template">
  <li>
    <p><span class="date date-past"></span>
    <span class="episode-code tt" title=""></span>
    <a href="" class="show-title"></a> &ndash; <a href="" class="episode-title"></a></p>
    <a href="" class="button-link link-episode episode-tick episode-shownext"><img src="img/unwatched.png" /></a>
    <a href="" class="button-link link-episode button-binsearch button-providerurl" target="blank"><img src="img/link.png" /></a>
  </li>
</script>

<script id="episode-tobeaired-template" type="text/x-showdates-row-template">
  <li>
    <p><span class="date"></span>
    <span class="episode-code"></span>
    <a href="" class="show-title"></a> &ndash; <a href="" class="episode-title"></a></p>
  </li>
</script>

<script id="section-tba-template" type="text/x-showdates-row-template">
  <li>To Be Aired</li>
  <ul id="section-tba">
  </ul>
</script>

<p class="couch-buttons-footer"><a class="btn btn-white" href="webcal://<%= ENV['BASE_URL'].split('//')[1] %>feed/ical/user:<%= @user.id %>/key:<%= @user.servicekey %>" title="Add Showdates to your calendar">iCal Feed</a></p>

<script type="text/javascript">
  $(function() {
    function fill_template(template, next_episode) {
      template.addClass('show-' + next_episode.show_id);
      template.addClass('episode-' + next_episode.id);

      template.find('.date').html(next_episode.firstaired_formatted);

      template.find('.episode-code').html(next_episode.episode_code);

      if (next_episode.aired) {
        queue_title = 'Final episode to catch up';
        if (next_episode.queue != 1) {
          queue_title = next_episode.queue + ' episodes to catch up';
        }
        template.find('.episode-code').attr('title', queue_title);
        template.find('.episode-code').addClass('tt');
      }

      template.find('.show-title').html(next_episode.show_title);
      template.find('.show-title').attr('href', '/show/' + next_episode.show_id);

      template.find('.episode-title').html(next_episode.title);
      template.find('.episode-title').attr('href', '/episode/' + next_episode.id);

      if (next_episode.aired) {
        template.find('.episode-tick').attr('href', '/episode/watched/' + next_episode.id);
        template.find('.episode-tick').attr('data-episodeid', next_episode.id);

        template.find('.button-providerurl').attr('href', next_episode.providerurl);
      }
    }

    $(document).on('click', '.episode-tick', function(e) {
      e.preventDefault();

      var self = $(this);

      $.post('/api/episode/' + self.data('episodeid') + '/include_next', { watched: !self.data('watched') }, function(data) {
        self.data('watched', data.watched);

        if (data.watched) {
          self.html('<img src="img/watched.png" />')
						  .addClass('episode-watched');
        } else {
          self.html('<img src="img/unwatched.png" />')
				    	.removeClass('episode-watched');
        }

        if (data.next_episode) {
          // If this episode is already visible, do not add it again
          if ($('.episode-' + data.next_episode.id).length == 1) {
            return;
          }

          if (data.next_episode.aired) {
            var aired_template = $($('#episode-aired-template').html()).clone();

            fill_template(aired_template, data.next_episode);

            aired_template.hide();

            $('.show-' + data.next_episode.show_id).last().after(aired_template);

            aired_template.slideDown('fast');
          } else {
            var tobeaired_template = $($('#episode-tobeaired-template').html()).clone();

            fill_template(tobeaired_template, data.next_episode);

            tobeaired_template.hide();

            var tba_section_template;

            if ($('#section-tba').length == 0) {
              tba_section_template = $($('#section-tba-template').html()).clone();
              tba_section_template.hide();
              $('.list-couch').append(tba_section_template);
            }

            var added = false;
            $('#section-tba li').each(function(key, val) {
							if (data.next_episode.timestamp < $(val).data('timestamp'))
							{
                $(val).before(tobeaired_template);
                added = true;
              }
            });

            if (!added) {
              $('#section-tba').append(tobeaired_template);
            }

            if (tba_section_template) {
              tba_section_template.slideDown('fast', function() {
                tobeaired_template.slideDown('fast');
              });
            } else {
              tobeaired_template.slideDown('fast');
            }
          }
        }
      }, 'json');
    });
  });
</script>
